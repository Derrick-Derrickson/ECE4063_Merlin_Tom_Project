--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1497w[1..0]	: WIRE;
	w_anode1506w[3..0]	: WIRE;
	w_anode1523w[3..0]	: WIRE;
	w_anode1533w[3..0]	: WIRE;
	w_anode1543w[3..0]	: WIRE;
	w_anode1553w[3..0]	: WIRE;
	w_anode1563w[3..0]	: WIRE;
	w_anode1573w[3..0]	: WIRE;
	w_anode1583w[3..0]	: WIRE;
	w_anode1595w[1..0]	: WIRE;
	w_anode1602w[3..0]	: WIRE;
	w_anode1613w[3..0]	: WIRE;
	w_anode1623w[3..0]	: WIRE;
	w_anode1633w[3..0]	: WIRE;
	w_anode1643w[3..0]	: WIRE;
	w_anode1653w[3..0]	: WIRE;
	w_anode1663w[3..0]	: WIRE;
	w_anode1673w[3..0]	: WIRE;
	w_data1495w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1673w[3..3], w_anode1663w[3..3], w_anode1653w[3..3], w_anode1643w[3..3], w_anode1633w[3..3], w_anode1623w[3..3], w_anode1613w[3..3], w_anode1602w[3..3]), ( w_anode1583w[3..3], w_anode1573w[3..3], w_anode1563w[3..3], w_anode1553w[3..3], w_anode1543w[3..3], w_anode1533w[3..3], w_anode1523w[3..3], w_anode1506w[3..3]));
	w_anode1497w[] = ( (w_anode1497w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1506w[] = ( (w_anode1506w[2..2] & (! w_data1495w[2..2])), (w_anode1506w[1..1] & (! w_data1495w[1..1])), (w_anode1506w[0..0] & (! w_data1495w[0..0])), w_anode1497w[1..1]);
	w_anode1523w[] = ( (w_anode1523w[2..2] & (! w_data1495w[2..2])), (w_anode1523w[1..1] & (! w_data1495w[1..1])), (w_anode1523w[0..0] & w_data1495w[0..0]), w_anode1497w[1..1]);
	w_anode1533w[] = ( (w_anode1533w[2..2] & (! w_data1495w[2..2])), (w_anode1533w[1..1] & w_data1495w[1..1]), (w_anode1533w[0..0] & (! w_data1495w[0..0])), w_anode1497w[1..1]);
	w_anode1543w[] = ( (w_anode1543w[2..2] & (! w_data1495w[2..2])), (w_anode1543w[1..1] & w_data1495w[1..1]), (w_anode1543w[0..0] & w_data1495w[0..0]), w_anode1497w[1..1]);
	w_anode1553w[] = ( (w_anode1553w[2..2] & w_data1495w[2..2]), (w_anode1553w[1..1] & (! w_data1495w[1..1])), (w_anode1553w[0..0] & (! w_data1495w[0..0])), w_anode1497w[1..1]);
	w_anode1563w[] = ( (w_anode1563w[2..2] & w_data1495w[2..2]), (w_anode1563w[1..1] & (! w_data1495w[1..1])), (w_anode1563w[0..0] & w_data1495w[0..0]), w_anode1497w[1..1]);
	w_anode1573w[] = ( (w_anode1573w[2..2] & w_data1495w[2..2]), (w_anode1573w[1..1] & w_data1495w[1..1]), (w_anode1573w[0..0] & (! w_data1495w[0..0])), w_anode1497w[1..1]);
	w_anode1583w[] = ( (w_anode1583w[2..2] & w_data1495w[2..2]), (w_anode1583w[1..1] & w_data1495w[1..1]), (w_anode1583w[0..0] & w_data1495w[0..0]), w_anode1497w[1..1]);
	w_anode1595w[] = ( (w_anode1595w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1602w[] = ( (w_anode1602w[2..2] & (! w_data1495w[2..2])), (w_anode1602w[1..1] & (! w_data1495w[1..1])), (w_anode1602w[0..0] & (! w_data1495w[0..0])), w_anode1595w[1..1]);
	w_anode1613w[] = ( (w_anode1613w[2..2] & (! w_data1495w[2..2])), (w_anode1613w[1..1] & (! w_data1495w[1..1])), (w_anode1613w[0..0] & w_data1495w[0..0]), w_anode1595w[1..1]);
	w_anode1623w[] = ( (w_anode1623w[2..2] & (! w_data1495w[2..2])), (w_anode1623w[1..1] & w_data1495w[1..1]), (w_anode1623w[0..0] & (! w_data1495w[0..0])), w_anode1595w[1..1]);
	w_anode1633w[] = ( (w_anode1633w[2..2] & (! w_data1495w[2..2])), (w_anode1633w[1..1] & w_data1495w[1..1]), (w_anode1633w[0..0] & w_data1495w[0..0]), w_anode1595w[1..1]);
	w_anode1643w[] = ( (w_anode1643w[2..2] & w_data1495w[2..2]), (w_anode1643w[1..1] & (! w_data1495w[1..1])), (w_anode1643w[0..0] & (! w_data1495w[0..0])), w_anode1595w[1..1]);
	w_anode1653w[] = ( (w_anode1653w[2..2] & w_data1495w[2..2]), (w_anode1653w[1..1] & (! w_data1495w[1..1])), (w_anode1653w[0..0] & w_data1495w[0..0]), w_anode1595w[1..1]);
	w_anode1663w[] = ( (w_anode1663w[2..2] & w_data1495w[2..2]), (w_anode1663w[1..1] & w_data1495w[1..1]), (w_anode1663w[0..0] & (! w_data1495w[0..0])), w_anode1595w[1..1]);
	w_anode1673w[] = ( (w_anode1673w[2..2] & w_data1495w[2..2]), (w_anode1673w[1..1] & w_data1495w[1..1]), (w_anode1673w[0..0] & w_data1495w[0..0]), w_anode1595w[1..1]);
	w_data1495w[2..0] = data_wire[2..0];
END;
--VALID FILE
